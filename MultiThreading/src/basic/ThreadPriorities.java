package basic;

/**
 * 
 * @author Shri
 * 
 *	Every thread in java has priority.
 *	It may be default generated by jvm or customized by programmer.
 *	valid range of thread priority is 1 to 10
 *	Thread defines constant to define thread priority:
 *			1. Thread.MIN_PRIORITY = 1
 *			2. Thread.MAX_PRIORITY = 10
 *			3. Thread.NORM_PRIORITY = 5 
 *
 *	Thread scheduler use priority to schedule threads execution.
 *	If two thread have same priority then we can't expect exact execution order.
 *	We can get & set priority using following methods :
 *			1. public final int getPriority()
 *			2. public final void setPriority(int priority)
 *
 *	If we try to set priority other than 1 to 10 then it will give runtime error like
 *		IllegalArgumentException
 *
 *	Default priority of main thread is 5
 *	Other thread default priority same like it's parent thread or
 *	same from which thread we are calling it.
 */

class Thread1 extends Thread{
	public void run(){
		System.out.println("child thread1 priority is :"+ Thread.currentThread().getPriority());
	}
}
class Thread2 extends Thread{
	public void run(){
		System.out.println("child thread2 priority is :"+ Thread.currentThread().getPriority());
	}
}
public class ThreadPriorities {

	public static void main(String[] args) {

		System.out.println("Main thread priority is :" + Thread.currentThread().getPriority());
		
		/**
		 * Here we are calling/creating new thread so default thread t priority is same like main
		 * 	thread and i.e 5
		 */
		Thread.currentThread().setPriority(7);
		
		Thread1 t = new Thread1();
		Thread2 t2 = new Thread2();
		t2.setPriority(9);
		t.start();
		t2.start();
		
		/**
		 * If change main thread priority then it will reflect to child priority
		 */
		
		System.out.println("Main thread priority is :" + Thread.currentThread().getPriority());
		
		/**
		 * output will be:
		 *
		 *	Main thread priority is :5
			Main thread priority is :7
			child thread2 priority is :9
			child thread1 priority is :7
		 *
		 *
		 */
	}

}
